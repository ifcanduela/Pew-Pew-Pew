<?php

require_once 'config.php';
require_once 'pew.class.php';

/**
 * Test class for Pew.
 * Generated by PHPUnit on 2012-02-20 at 16:23:40.
 */
class PewTest extends PHPUnit_Framework_TestCase
{
    /**
     * @var Pew
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
        
    }
    
    public function testSet()
    {
        $my_model = new Model('users');
        $this->assertTrue(Pew::Set('my_model', $my_model));
        $this->assertEquals('Model', get_class(Pew::Get('my_model')));
        
        $this->assertFalse(Pew::Set('my_model', $my_model));
        
        $this->assertFalse(Pew::Set(12, array()));
        $this->assertFalse(Pew::Set('string', array()));
        $this->assertFalse(Pew::Set(12, (object) array()));
    }

    public function testGet()
    {
        $session_object = Pew::Get('Session');
        $this->assertTrue(is_object($session_object));
        $this->assertEquals('Session', get_class($session_object));
        $not_session_object = Pew::Get('NotSession');
        $this->assertFalse($not_session_object);
    }

    public function testGetController()
    {
        $pages_controller = Pew::GetController('Pages');
        
        $this->assertTrue(is_object($pages_controller));
        $this->assertEquals('Pages', get_class($pages_controller));
        
        ob_start();
        $pages_controller->parameters['action'] = 'index';
        $pages_controller->_action();
        ob_end_clean();
        
        $class_exists_controller = Pew::GetController('ClassExists');
        
        $this->assertTrue(is_object($class_exists_controller));
        $this->assertEquals('ClassExists', get_class($class_exists_controller));
        
        
        $class_does_not_exist_controller = Pew::GetController('ClassDoesNotExist');
        
        $this->assertFalse(is_object($class_does_not_exist_controller));
    }

    /**
     * @cover Pew::GetModel
     */
    public function testGetModel()
    {
        $this->assertEquals('test', USEDB);
        
        $test_model = Pew::GetModel('Test');
        $this->assertTrue(is_object($test_model));
        $this->assertEquals('TestModel', get_class($test_model));
        
        $users_model = Pew::GetModel('Users');
        $this->assertTrue(is_object($users_model));
        $this->assertEquals('UsersModel', get_class($users_model));
        
        $models_model = Pew::GetModel('Models');
        $this->assertTrue(is_object($models_model));
        $this->assertEquals('Model', get_class($models_model));
        
        $model = new Model('Test');
        $this->assertTrue(is_object($model));
        $this->assertEquals('Model', get_class($model));
    }

    /**
     * @covers Pew::GetLibrary().
     */
    public function testGetLibrary()
    {
        $img = Pew::GetLibrary('Img');
        $this->assertEquals('Img', get_class($img));
        
        $markdown = Pew::GetLibrary('Markdown');
        $this->assertEquals('Markdown', get_class($markdown));
    }

    /**
     * @covers Pew::GetDatabase
     */
    public function testGetDatabase()
    {
        $db = null;
        try {
            $db = new PewDatabase();
        } catch (Exception $e) {
            echo $e->getMessage();
        }
        
        $db = Pew::GetDatabase();
        
        $this->assertTrue(is_object($db));
        $this->assertEquals('PewDatabase', get_class($db));
        
        define('DATABASE_CONFIGURATION', APP . 'config/database_configuration.php');
        $db = Pew::GetDatabase();
        
        $this->assertTrue(is_object($db));
        $this->assertEquals('PewDatabase', get_class($db));
    }

    /**
     * @todo Implement testClean().
     */
    public function testClean()
    {
        Pew::Clean();
    }
}
