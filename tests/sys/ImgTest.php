<?php

require_once 'img.class.php';

$cwd = getcwd();

/**
 * Test class for Img.
 * Generated by PHPUnit on 2012-02-21 at 15:50:20.
 */
class ImgTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Img
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        $this->img = new Img;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    public function testLoad()
    {
        $this->assertFalse($this->img->load('C:\xampp\htdocs\pew-pew-pew\sys\test\sys\test.sqlite'));
        $this->assertEquals('For the moment, only JPG and PNG image files are supported', $this->img->error);
        
        $this->img = new Img('www/noimg.gif');
        $this->assertTrue(is_object($this->img));
        $this->assertEquals('File could not be found', $this->img->error);
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $this->assertEquals('', $this->img->error);
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.jpg');
        $this->assertEquals('', $this->img->error);
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.gif');
        $this->assertEquals('', $this->img->error);
        
        $this->assertFalse($this->img->load('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/no-image.jpg'));
    }

    public function testSaveTo()
    {
        $this->img = new Img('false');
        $this->assertfalse($this->img->saveTo('temp'));
        $this->assertEquals('No image was loaded', $this->img->error);
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $this->img->saveTo('temp');
        $this->assertFileExists('temp/600_400.png');
        unlink('temp/600_400.png');
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test/www/img/600_400.png');
        $this->img->saveTo('');
        $this->assertFileExists('600_400.png');
        unlink('600_400.png');
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.jpg');
        $this->img->saveTo('temp');
        $this->assertFileExists('temp/600_400.jpg');
        unlink('temp/600_400.jpg');
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.gif');
        $this->img->saveTo('temp');
        $this->assertFileExists('temp/600_400.gif');
        unlink('temp/600_400.gif');
    }
    
    public function testSetDestinationName()
    {
        $this->assertFalse($this->img->setDestinationName(1212));
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $this->img->setDestinationName('temp_600_400');
        $this->img->saveTo('temp');
        $this->assertFileExists('temp/temp_600_400.png');
        unlink('temp/temp_600_400.png');
        
        $this->assertFalse($this->img->setDestinationName(1212));
    }

    public function testGetDestinationName()
    {
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $this->assertEquals(getcwd() . '/600_400.png', $this->img->getDestinationName());
    }

    public function testSetThumbSize()
    {
        $this->img = new Img('---');
        $this->assertFalse($this->img->setThumbSize(120));
        
        $this->img = new Img('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $result1 = $this->img->setThumbSize(400);
        $result2 = $this->img->setThumbSize(400, 150);
        
        $this->assertTrue(is_object($result1));
        $this->assertTrue(is_object($result2));
        
        $result3 = $this->img->setThumbSize('non-numeric value');
        $this->assertFalse($result3);
        $this->assertEquals('Specified thumbnail width is invalid', $this->img->error);
    }
    
    public function testGetThumbSize()
    {
        $this->assertTrue(is_array($sz = $this->img->getThumbSize()));
        $this->assertTrue(is_numeric($sz[1]));
    }
    
    public function testResetThumbSize()
    {
        $this->img->resetThumbSize();
    }

    /**
     * @todo Implement testSaveThumbnailTo().
     */
    public function testSaveThumbnailTo()
    {
        $this->img->load('C:\xampp\htdocs\pew-pew-pew\sys\test\www/img/600_400.png');
        $this->img->saveThumbnailTo('temp');
        unlink('temp/600_400.png');
        
        $this->img->setThumbSize(100, 400);
        $this->img->saveThumbnailTo('');
        unlink('600_400.png');
        
        $this->img->setThumbSize(400, 100);
        $this->img->saveThumbnailTo('temp');
        unlink('temp/600_400.png');
        
        $this->img->setThumbSize(150, 100);
        $this->img->saveThumbnailTo('temp');
        unlink('temp/600_400.png');
    }
}

?>
