<?php

require_once 'config.php';
require_once 'pew.class.php';
require_once 'model.class.php';

/**
 * Test class for Model.
 * Generated by PHPUnit on 2012-02-23 at 13:14:55.
 */
class ModelTest extends PHPUnit_Framework_TestCase {

    /**
     * @var Model
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
        
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }
    
    public function testConstruct()
    {
        $model = new Model('users');
        $this->assertEquals('Model', get_class($model));
    }

    public function testAdd_child()
    {
        $model = new Model('users');
        $model->add_child('users', 'user_id');
        
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    public function testAdd_parent()
    {
        $model = new Model('users');
        $model->add_parent('users', 'user_id');
        
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    public function testRemove_child()
    {
        $model = new Model('users');
        $model->add_child('users', 'user_id');
        $model->remove_child('users');
        
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    public function testRemove_parent()
    {
        $model = new Model('users');
        $model->add_parent('users', 'user_id');
        $model->remove_parent('users');
        
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    public function test__get()
    {
        $model = new Model('users');
        $model->find(1);
        $id = $model->id;
        $this->assertEquals('1', $id);
    }

    public function test__set()
    {
        $model = new Model('users');
        $model->find(1);
        $model->id = 2;
        $this->assertEquals(2, $model->id);
    }

    public function test__call()
    {
        $model = new Model('users');
        $user = $model->find_by_id(1);
        
        $this->assertEquals(1, $user['id']);
    }

    public function testQuery()
    {
//        $model = new Model('users');
//        $users = $model->query("SELECT * FROM users");
        
//        $this->assertTrue(array_key_exists($users, 0));
//        $this->assertTrue(array_key_exists($users[0], 'username'));
    }

    public function testFind()
    {
        $model = new Model('users');
        $user = $model->find(1);
        $this->assertTrue(is_array($user));
        $this->assertEquals('1', $user['id']);
        $this->assertEquals('test_subject', $user['username']);
        $this->assertEquals('ifernandez@example.com', $user['email']);
    }

    public function testFind_all()
    {
        $model = new Model('users');
        $users = $model->find_all();
        $this->assertTrue(is_array($users));
        
        $user = $users[0];
        $this->assertEquals('1', $user['id']);
        $this->assertEquals('test_subject', $user['username']);
        $this->assertEquals('ifernandez@example.com', $user['email']);
    }

    public function testCount()
    {
        $model = new Model('users');
        $user_count = $model->count();
        $this->assertTrue(is_numeric($user_count));
        
        $user_count = $model->count(array('id' => array('>', 0)));
        $this->assertTrue(is_numeric($user_count));
    }

    public function testSave()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testDelete()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testFind_related()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testLast_insert_id()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testSelect()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testWhere()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testLimit()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testOrder_by()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testGroup_by()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testHaving()
    {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }
}
